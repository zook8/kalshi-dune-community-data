name: Debug Markets Upload Issue

on:
  workflow_dispatch:  # Manual trigger only for debugging

jobs:
  debug-markets-issue:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create necessary directories
        run: |
          mkdir -p logs data

      - name: Set collection date
        id: date
        run: echo "date=$(date -u +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Step 1 - Run Data Collection Only
        env:
          COLLECTION_DATE: ${{ steps.date.outputs.date }}
        run: |
          echo "üöÄ STEP 1: Running data collection only..."
          echo "Collection Date: $COLLECTION_DATE"
          python scripts/kalshi_collector.py
          
          echo "üìä STEP 1 RESULTS:"
          ls -la data/
          
          # Check if markets file was created
          if [ -f "data/kalshi_markets_$(date +%Y%m%d).csv" ]; then
            echo "‚úÖ Markets file created successfully"
            wc -l "data/kalshi_markets_$(date +%Y%m%d).csv"
          else
            echo "‚ùå Markets file NOT created"
            exit 1
          fi

      - name: Step 2 - Run Debug Upload Only  
        env:
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
          COLLECTION_DATE: ${{ steps.date.outputs.date }}
          APPEND_MODE: "true"
        run: |
          echo "üöÄ STEP 2: Running debug upload only..."
          echo "Collection Date: $COLLECTION_DATE"
          echo "Append Mode: $APPEND_MODE"
          
          # Verify files exist before upload
          echo "üìÑ Files before upload:"
          ls -la data/
          
          # Run debug uploader
          python scripts/dune_uploader_debug.py

      - name: Upload ALL logs and data files (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs-and-data-${{ github.run_number }}
          path: |
            logs/
            data/
          retention-days: 7

      - name: Display final status
        if: always()
        run: |
          echo "üèÅ FINAL STATUS CHECK:"
          echo "Data files:"
          ls -la data/ || echo "No data directory"
          echo "Log files:"
          ls -la logs/ || echo "No logs directory"
          echo "Debug workflow completed."